abline(lm(diamond$carat~diamond$price, data=diamond), lwd=2)
plot(diamond$carat,diamond$price, Xlab="Mass(Carat)",ylab="in $",bg="blue",col="black")abline(lm(diamond$carat~diamond$price, data=diamond), lwd=2)
plot(diamond$carat,diamond$price, Xlab="Mass(Carat)",ylab="in $",bg="blue",col="black")abline(lm(diamond$carat~diamond$price, data=diamond), lwd=2)
plot(diamond$carat,diamond$price, Xlab="Mass(Carat)",ylab="in $",bg="blue",col="black")abline(lm(diamond$carat~diamond$price, data=diamond), lwd=2)
plot(diamond$carat,diamond$price, Xlab="Mass(Carat)",ylab="in $",bg="blue",col="black");
abline(lm(diamond$carat~diamond$price, data=diamond), lwd=2)
data(diamond)
plot(diamond$carat, diamond$price,
xlab = "Mass (carats)",
ylab = "Price (SIN $)",
bg = "lightblue",
col = "black", cex = 1.1, pch = 21,frame = FALSE)
abline(lm(price ~ carat, data = diamond), lwd = 2)
fit<- lm(diamond$price~diamond$carat, data=diamond)
coef(fit)
getwd()
load("D:\\Coursera\\2 R programming\\WORK\\.RData")
ls()
load("D:\\user modeling\\workspace\\.RData")
ls
dir
table
list
help.search("all datasets")
ls()
rm(userAtt)
rm(userEventAtt)
ls()
head(training)
head(training)
summary(training)
q()
load("C:\\Users\\satish_pradhan\\Documents\\.RData")
ls()
summary(training)
summary(training)
attach(training)
summary(User.ID)
count(is.na(User.ID))
sum(is.na(User.ID))
help.start()
help.search("count")
sum(is.null(User.ID))
sum(is.null(Rating))
sum(is.null(Home.Latitude))
sum(is.na(Home.Latitude))
help.search("not null")
sum(is.na(User.ID))
sum(!(is.na(User.ID)))
sum(!(is.na(Event.ID)))
ls()
detach(training)
sum(!(is.na(eventData.Event.ID)))
sum(!(is.na(eventData$Event.ID)))
summary(eventData)
head(training,100)
q()
ls()
data<-training
head(data)
search()
ls()
attach(data)
head(data)
help.search("sqrt")
help.search("sqr")
5^2
distance<-sqrt((Home.Latitude-Event.Venue.Latitude)^2+(Home.Longitude-Event.Venue.Longitude)^2)
data<-cbind(data,distance)
head(data)
t<-data
head(t)
detach(t)
detach(data)
rm(t.User.ID)
head(t)
help.search("subset")
a<-subset(t,select=c(User.ID,Event.ID,Rating,distance,Time.of.Attendance))
head(a)
nam<-c(User.ID,Event.ID,Rating,Distance,Attendance)
nam<-c("User.ID","Event.ID",Rating,Distance,Attendance)
nam<-c("User.ID","Event.ID","Rating","Distance","Attendance")
names(t)
names(a)
names(a)<-nam
names(a)
head(a)
head(data)
data<-a
head(data)
ls()
rm(nam)
rm(t)
rm(a)
ls()
rm(distance)
ls()
head(data)
help.search("time")
help.search("time")
t<-data
d<-round(t$Attendance,"Day")
d<-round(t$Attendance,"day")
class(t$Attendance)
help.search("Date")
class(today())
Systime()
Sys.Date()
class(Sys.Date())
a<-"13-04-2012"
class(a)
b<-as.Date(a)
class(b)
b
help.search("as.Date")
b<-as.Date(a,"dd-mm-yyyy")
d
b
a
b
class(b)
b<-as.Date(a)
b
b<-as.Date(a,"%d-%m-%Y")
b
head(data)
inst<-data$Attendance[1]
inst
b<-as.Date(inst,"%d-%m-%Y")
b
inst<-data$Attendance[[1]]
inst
inst <- "13-04-2012 01:06"
inst
b<-as.Date(inst,"%d-%m-%Y")
b
inst<-data$Attendance[[2]]
inst
b<-as.Date(inst,"%d-%m-%Y")
b
date <- as.Date(head$Attendance,"%d-%m-%Y")
date <- as.Date(data$Attendance,"%d-%m-%Y")
head(date)
data<-cbind(data,date)
head(data)
b
day(b)
help.search("Day")
class(data$date)
day<-weekday(data$date)
day<-weekdays(data$date)
head(day)
data<-cbind(data,day)
head(data)
head(data,15)
help.search("as.Time")
help.search("Hour")
help.search("Date")
help.search("as.Time")
a
a<-13-04-2012 01:06
a<-"13-04-2012 01:06"
round(a,"hour")
a<-as.Date("13-04-2012 01:06")
round(a,"hour")
trunc(a,"hour")
a<-as.DateTime("13-04-2012 01:06")
a<-as.DateTimeClass("13-04-2012 01:06")
a<-"13-04-2012 01:06"
trunc(a,-4)
substr(a,-4)
substr(a,-4,4)
substr(a,11,4)
a
substr(a,11,3)
substr(a,10,3)
substr(a,10)
substr(a,1,2)
substr(a,2,2)
substr(a,11,15)
substr(a,11,16)
substr(a,12,16)
substr(a,12,13)
substr(a,15,16)
as.Integer(substr(a,12,13))
as.Number(substr(a,12,13))
help.search("as.Integer")
as.integer(substr(a,12,13))
as.integer(substr(a,12,13))*60+as.integer(substr(a,15,16))
as.integer(substr(a,12,13))*100+as.integer(substr(a,15,16))
as.integer(substr(a,12,13))*100+as.integer(substr(a,15,16))+20
b<-as.integer(substr(a,12,13))*100+as.integer(substr(a,15,16))+20
b
round(b)
round(b,2)
round(b,1)
round(b,-1)
round(b,-2)
round(b,-2)mod100
round(b,-2)%100
c<-round(b,-2)
mod(c,100)
help.search("mod")
5^^2
5%2
5Mod2
help.search("modulus")
help("modulus")
help("mod")
help.search("modulus")
help.search("operators")
5%%2
b
b%%100
b<-150
round(b,-2)
head(data)
x<-data$Attendance[2]
x
y<-as.integer(substr(x,12,13))*100+as.integer(substr(x,15,16))+20
y
round(y,-2)/100
z<-round((as.integer(substr(x,12,13))*100+as.integer(substr(x,15,16))+20),-2)/100
z
hour<-round((as.integer(substr(data$Attendance,12,13))*100+as.integer(substr(data$Attendance,15,16))+20),-2)/100
head(hour)
data<-cbind(data,hour)
head(data)
ls()
q()
ls()
hist(userData$User.ID)
q()
load(url("http://s3.amazonaws.com/assets.datacamp.com/course/dasi/cdc.Rdata"))
dim(cdc)
head(cdc)
names(cdc)
cases(cdc.genhlth)
summary(cdc)
summary(cdc$genhlth)
hist(cdc$genhlth)
help(mosaicplot)
mosaicplot(~ gender + smoke100, data=cdc, color=TRUE)
help(subset)
subset(cdc, age>23 and smoke100==1)
subset(cdc, age>23,smoke100==1)
subset(cdc, age<23,smoke100==1)
subset(subset(cdc,smoke100==1), age<23)
a=subset(subset(cdc,smoke100==1), age<23)
x <- c(0.18, -1.54, 0.42, 0.95)
mean(x)
data(mtcars)
head(mtcars)
data(father.son)
y <- (father.son$sheight - mean(father.son$sheight)) / sd(father.son$sheight)
x <- (father.son$fheight - mean(father.son$fheight)) / sd(father.son$fheight)
rho <- cor(x, y)
y <- (mtcars$mpg - mean(mtcars$mpg)/sd(mtcars$mpg) )
x <- (mtcars$wt - mean(mtcars$wt)/sd(mtcars$wt) )
rho <- cor(x, y)
rho
cor(mtcars$mpg,mtcars$wt)
cor(mtcars$wt,mtcars$mpg)
a <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
b <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
cor(a,b)
cor(a,b)*sd(a)/sd(b)
cor(mtcars$mpg,mtcars$wt)sd(mtcars$mpg)/sd(mtcars$wt)
cor(mtcars$mpg,mtcars$wt)*sd(mtcars$mpg)/sd(mtcars$wt)
1.5*0.4
1.5/0.4
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
a <- (x-mean(x))/sd(x)
a
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
slope <- cor(y,x)*sd(y)/sd(x)
coef <- mean(y) - slope*mean(x)
coef
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
data(diamond)
library(UsingR)
data(diamond)
head(diamond)
plot(diamond$carat,diamond$price, Xlab="Mass(Carat)",ylab="in $",bg="blue",col="black")
abline(lm(diamond$carat~diamond$price, data=diamond), lwd=2)
plot(diamond$carat,diamond$price, Xlab="Mass(Carat)",ylab="in $",bg="blue",col="black")abline(lm(diamond$carat~diamond$price, data=diamond), lwd=2)
plot(diamond$carat,diamond$price, Xlab="Mass(Carat)",ylab="in $",bg="blue",col="black")abline(lm(diamond$carat~diamond$price, data=diamond), lwd=2)
plot(diamond$carat,diamond$price, Xlab="Mass(Carat)",ylab="in $",bg="blue",col="black")abline(lm(diamond$carat~diamond$price, data=diamond), lwd=2)
plot(diamond$carat,diamond$price, Xlab="Mass(Carat)",ylab="in $",bg="blue",col="black");
abline(lm(diamond$carat~diamond$price, data=diamond), lwd=2)
data(diamond)
plot(diamond$carat, diamond$price,
xlab = "Mass (carats)",
ylab = "Price (SIN $)",
bg = "lightblue",
col = "black", cex = 1.1, pch = 21,frame = FALSE)
abline(lm(price ~ carat, data = diamond), lwd = 2)
fit<- lm(diamond$price~diamond$carat, data=diamond)
coef(fit)
setInternet2(use=TRUE)
swirl()
library(swirl)
ls()
getwd()
getwd()
ls()
load("D:\\Coursera\\2 R programming\\WORK\\.RData")
ls()
rm(list=ls())
ls()
save.image("D:\\Coursera\\2 R programming\\WORK\\.RData")
q()
rm(list=ls())
swirl()
library(swirl)
setRepositories()
swirl()
exit()
q()
getwd()
setwd("D:/Coursera/2 R programming/WORK")
ls()
x<-4
if(x>3){s<-"Greater"}else{s<-"smaller"}
new<- if(x>3){">"}else{"<="}
x<-c('a','b','c','d')
for(i in 1:4){print(x[i])}
for(i in seq_along(x)){print x[i]}
for(i in seq_along(x)){print(x[i])}
for(c in x){print(c)}
add2 <- function(x,y)
{
x+y
}
add2(3,5)
version
debug(ls)
ls()
Q
Q
library(dataset)
library(datasets)
data(iris)
table(iris)
Q
recover()
Q
library(datasets)
data(iris
)
summary(iris)
data(mtcar)
data(mtcars)
summary(mtcars)
tapply(mtcars$mpg,mtcars$cyl,mean)
a<-tapply(mtcars$mpg,mtcars$cyl,mean)
summary(a)
a<-tapply(mtcars$hp,mtcars$cyl,mean)
a
abs(a[3]-a[1])
a[3]
a[1]
a[3]-a[1]
a[1]-a[3]
apply(iris[, 1:4], 2, mean)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 1, mean)
head(iris)
tapply(iris$Sepal.Length,iris$Species,mean)
sapply(mtcars, cyl, mean)
a[1]-a[3]
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
x<-matrix(1:6,2,3)
x
solve(x)
x<-matrix(1:9,3,3)
x
solve(x)
x<-matrix(c(1,2,7,5),2,2)
x
solve(x)
getwd()
setwd("D:/Coursera/2 R programming/WORK/ProgrammingAssignment2")
ls
ls()
ls()
dir
dir()
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
x<-c(1:10)
makeVector(x)
y<-c(1:10)
makeVector()
cachemean(x)
source('D:/Coursera/2 R programming/WORK/ProgrammingAssignment2/cachematrix.R')
a<-matrix(c(1,2,7,5),2,2)
makeCacheMatrix(a)
d <- makeCacheMatrix(a)
cacheSolve(d)
class(d)
source('D:/Coursera/2 R programming/WORK/ProgrammingAssignment2/cachematrix.R')
d <- makeCacheMatrix(a)
d$get()
d$getCache()
cacheSolve(d)
d$getCache()
cacheSolve(d)
source('D:/Coursera/2 R programming/WORK/ProgrammingAssignment2/cachematrix.R')
d <- makeCacheMatrix(a)
a
solve(a)
cacheSolve(d)
source('D:/Coursera/2 R programming/WORK/ProgrammingAssignment2/cachematrix.R')
a
solve(a)
makeCacheMatrix(a)
cacheSolve(a)
source('D:/Coursera/2 R programming/WORK/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(a)
cacheSolve(a)
cacheSolve(a)
source('D:/Coursera/2 R programming/WORK/ProgrammingAssignment2/cachematrix.R')
cacheSolve(a)
cacheSolve(a)
z<-matrix(c(10,11,31,27),2,2)
cacheSolve(z)
makeCacheMatrix(z)
cache
cacheSolve(z)
solve(z)
cacheSolve(z)
cacheSolve(a)
source('D:/Coursera/2 R programming/WORK/ProgrammingAssignment2/cachematrix.R')
z <-matrix(c(21,27,7,13),2,2)
a <-matrix(c(2,7,17,1,3,11,19,13,37),3,3)
solve(a)
solve(z)
makeCacheMatrix(a)
a<-makeCacheMatrix(a)
cacheSolve(a)
a <-matrix(c(2,7,17,1,3,11,19,13,37),3,3)
cacheSolve(a)
b<-makeCacheMatrix(a)
cacheSolve(b)
source('D:/Coursera/2 R programming/WORK/ProgrammingAssignment2/cachematrix.R')
b<-makeCacheMatrix(a)
b
source('D:/Coursera/2 R programming/WORK/ProgrammingAssignment2/cachematrix.R')
b<-makeCacheMatrix(a)
b
b$get
source('D:/Coursera/2 R programming/WORK/ProgrammingAssignment2/cachematrix.R')
b<-makeCacheMatrix(a)
b$get
b<-makeCacheMatrix(a)
a
b$get()
source('D:/Coursera/2 R programming/WORK/ProgrammingAssignment2/cachematrix.R')
b<-makeCacheMatrix(a)
b$get()
source('D:/Coursera/2 R programming/WORK/ProgrammingAssignment2/cachematrix.R')
b<-makeCacheMatrix(a)
b$get()
source('D:/Coursera/2 R programming/WORK/ProgrammingAssignment2/cachematrix.R')
